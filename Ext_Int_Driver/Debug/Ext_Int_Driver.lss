
Ext_Int_Driver.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000294  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  000002e8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  000002e8  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000318  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000100  00000000  00000000  00000354  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000c06  00000000  00000000  00000454  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000727  00000000  00000000  0000105a  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000069c  00000000  00000000  00001781  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000001d8  00000000  00000000  00001e20  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000462  00000000  00000000  00001ff8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000063f  00000000  00000000  0000245a  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000c0  00000000  00000000  00002a99  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 23 01 	jmp	0x246	; 0x246 <__vector_1>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 1d 01 	call	0x23a	; 0x23a <main>
  64:	0c 94 48 01 	jmp	0x290	; 0x290 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <DIO_SetPinDir>:
		case DIO_PORTC:
		PORTC ^= 0xFF;
		break;
		
		case DIO_PORTD:
		PORTD ^= 0xFF;
  6c:	41 30       	cpi	r20, 0x01	; 1
  6e:	b9 f5       	brne	.+110    	; 0xde <DIO_SetPinDir+0x72>
  70:	84 31       	cpi	r24, 0x14	; 20
  72:	a1 f0       	breq	.+40     	; 0x9c <DIO_SetPinDir+0x30>
  74:	18 f4       	brcc	.+6      	; 0x7c <DIO_SetPinDir+0x10>
  76:	8a 30       	cpi	r24, 0x0A	; 10
  78:	31 f0       	breq	.+12     	; 0x86 <DIO_SetPinDir+0x1a>
  7a:	08 95       	ret
  7c:	8e 31       	cpi	r24, 0x1E	; 30
  7e:	c9 f0       	breq	.+50     	; 0xb2 <DIO_SetPinDir+0x46>
  80:	88 32       	cpi	r24, 0x28	; 40
  82:	11 f1       	breq	.+68     	; 0xc8 <DIO_SetPinDir+0x5c>
  84:	08 95       	ret
  86:	2a b3       	in	r18, 0x1a	; 26
  88:	81 e0       	ldi	r24, 0x01	; 1
  8a:	90 e0       	ldi	r25, 0x00	; 0
  8c:	02 c0       	rjmp	.+4      	; 0x92 <DIO_SetPinDir+0x26>
  8e:	88 0f       	add	r24, r24
  90:	99 1f       	adc	r25, r25
  92:	6a 95       	dec	r22
  94:	e2 f7       	brpl	.-8      	; 0x8e <DIO_SetPinDir+0x22>
  96:	82 2b       	or	r24, r18
  98:	8a bb       	out	0x1a, r24	; 26
  9a:	08 95       	ret
  9c:	27 b3       	in	r18, 0x17	; 23
  9e:	81 e0       	ldi	r24, 0x01	; 1
  a0:	90 e0       	ldi	r25, 0x00	; 0
  a2:	02 c0       	rjmp	.+4      	; 0xa8 <DIO_SetPinDir+0x3c>
  a4:	88 0f       	add	r24, r24
  a6:	99 1f       	adc	r25, r25
  a8:	6a 95       	dec	r22
  aa:	e2 f7       	brpl	.-8      	; 0xa4 <DIO_SetPinDir+0x38>
  ac:	82 2b       	or	r24, r18
  ae:	87 bb       	out	0x17, r24	; 23
  b0:	08 95       	ret
  b2:	24 b3       	in	r18, 0x14	; 20
  b4:	81 e0       	ldi	r24, 0x01	; 1
  b6:	90 e0       	ldi	r25, 0x00	; 0
  b8:	02 c0       	rjmp	.+4      	; 0xbe <DIO_SetPinDir+0x52>
  ba:	88 0f       	add	r24, r24
  bc:	99 1f       	adc	r25, r25
  be:	6a 95       	dec	r22
  c0:	e2 f7       	brpl	.-8      	; 0xba <DIO_SetPinDir+0x4e>
  c2:	82 2b       	or	r24, r18
  c4:	84 bb       	out	0x14, r24	; 20
  c6:	08 95       	ret
  c8:	21 b3       	in	r18, 0x11	; 17
  ca:	81 e0       	ldi	r24, 0x01	; 1
  cc:	90 e0       	ldi	r25, 0x00	; 0
  ce:	02 c0       	rjmp	.+4      	; 0xd4 <DIO_SetPinDir+0x68>
  d0:	88 0f       	add	r24, r24
  d2:	99 1f       	adc	r25, r25
  d4:	6a 95       	dec	r22
  d6:	e2 f7       	brpl	.-8      	; 0xd0 <DIO_SetPinDir+0x64>
  d8:	82 2b       	or	r24, r18
  da:	81 bb       	out	0x11, r24	; 17
  dc:	08 95       	ret
  de:	41 11       	cpse	r20, r1
  e0:	3a c0       	rjmp	.+116    	; 0x156 <DIO_SetPinDir+0xea>
  e2:	84 31       	cpi	r24, 0x14	; 20
  e4:	a9 f0       	breq	.+42     	; 0x110 <DIO_SetPinDir+0xa4>
  e6:	18 f4       	brcc	.+6      	; 0xee <DIO_SetPinDir+0x82>
  e8:	8a 30       	cpi	r24, 0x0A	; 10
  ea:	31 f0       	breq	.+12     	; 0xf8 <DIO_SetPinDir+0x8c>
  ec:	08 95       	ret
  ee:	8e 31       	cpi	r24, 0x1E	; 30
  f0:	d9 f0       	breq	.+54     	; 0x128 <DIO_SetPinDir+0xbc>
  f2:	88 32       	cpi	r24, 0x28	; 40
  f4:	29 f1       	breq	.+74     	; 0x140 <DIO_SetPinDir+0xd4>
  f6:	08 95       	ret
  f8:	2a b3       	in	r18, 0x1a	; 26
  fa:	81 e0       	ldi	r24, 0x01	; 1
  fc:	90 e0       	ldi	r25, 0x00	; 0
  fe:	02 c0       	rjmp	.+4      	; 0x104 <DIO_SetPinDir+0x98>
 100:	88 0f       	add	r24, r24
 102:	99 1f       	adc	r25, r25
 104:	6a 95       	dec	r22
 106:	e2 f7       	brpl	.-8      	; 0x100 <DIO_SetPinDir+0x94>
 108:	80 95       	com	r24
 10a:	82 23       	and	r24, r18
 10c:	8a bb       	out	0x1a, r24	; 26
 10e:	08 95       	ret
 110:	27 b3       	in	r18, 0x17	; 23
 112:	81 e0       	ldi	r24, 0x01	; 1
 114:	90 e0       	ldi	r25, 0x00	; 0
 116:	02 c0       	rjmp	.+4      	; 0x11c <DIO_SetPinDir+0xb0>
 118:	88 0f       	add	r24, r24
 11a:	99 1f       	adc	r25, r25
 11c:	6a 95       	dec	r22
 11e:	e2 f7       	brpl	.-8      	; 0x118 <DIO_SetPinDir+0xac>
 120:	80 95       	com	r24
 122:	82 23       	and	r24, r18
 124:	87 bb       	out	0x17, r24	; 23
 126:	08 95       	ret
 128:	24 b3       	in	r18, 0x14	; 20
 12a:	81 e0       	ldi	r24, 0x01	; 1
 12c:	90 e0       	ldi	r25, 0x00	; 0
 12e:	02 c0       	rjmp	.+4      	; 0x134 <DIO_SetPinDir+0xc8>
 130:	88 0f       	add	r24, r24
 132:	99 1f       	adc	r25, r25
 134:	6a 95       	dec	r22
 136:	e2 f7       	brpl	.-8      	; 0x130 <DIO_SetPinDir+0xc4>
 138:	80 95       	com	r24
 13a:	82 23       	and	r24, r18
 13c:	84 bb       	out	0x14, r24	; 20
 13e:	08 95       	ret
 140:	21 b3       	in	r18, 0x11	; 17
 142:	81 e0       	ldi	r24, 0x01	; 1
 144:	90 e0       	ldi	r25, 0x00	; 0
 146:	02 c0       	rjmp	.+4      	; 0x14c <DIO_SetPinDir+0xe0>
 148:	88 0f       	add	r24, r24
 14a:	99 1f       	adc	r25, r25
 14c:	6a 95       	dec	r22
 14e:	e2 f7       	brpl	.-8      	; 0x148 <DIO_SetPinDir+0xdc>
 150:	80 95       	com	r24
 152:	82 23       	and	r24, r18
 154:	81 bb       	out	0x11, r24	; 17
 156:	08 95       	ret

00000158 <DIO_TogglePin>:
		break;
	}
}
void DIO_TogglePin(uint8 Port, uint8 Pin)
{
	switch (Port)
 158:	84 31       	cpi	r24, 0x14	; 20
 15a:	a1 f0       	breq	.+40     	; 0x184 <DIO_TogglePin+0x2c>
 15c:	18 f4       	brcc	.+6      	; 0x164 <DIO_TogglePin+0xc>
 15e:	8a 30       	cpi	r24, 0x0A	; 10
 160:	31 f0       	breq	.+12     	; 0x16e <DIO_TogglePin+0x16>
 162:	08 95       	ret
 164:	8e 31       	cpi	r24, 0x1E	; 30
 166:	c9 f0       	breq	.+50     	; 0x19a <DIO_TogglePin+0x42>
 168:	88 32       	cpi	r24, 0x28	; 40
 16a:	11 f1       	breq	.+68     	; 0x1b0 <DIO_TogglePin+0x58>
 16c:	08 95       	ret
	{
		case DIO_PORTA:
		ToggleBit(PORTA , Pin);
 16e:	2b b3       	in	r18, 0x1b	; 27
 170:	81 e0       	ldi	r24, 0x01	; 1
 172:	90 e0       	ldi	r25, 0x00	; 0
 174:	02 c0       	rjmp	.+4      	; 0x17a <DIO_TogglePin+0x22>
 176:	88 0f       	add	r24, r24
 178:	99 1f       	adc	r25, r25
 17a:	6a 95       	dec	r22
 17c:	e2 f7       	brpl	.-8      	; 0x176 <DIO_TogglePin+0x1e>
 17e:	82 27       	eor	r24, r18
 180:	8b bb       	out	0x1b, r24	; 27
		break;
 182:	08 95       	ret
		
		case DIO_PORTB:
		ToggleBit(PORTB , Pin);
 184:	28 b3       	in	r18, 0x18	; 24
 186:	81 e0       	ldi	r24, 0x01	; 1
 188:	90 e0       	ldi	r25, 0x00	; 0
 18a:	02 c0       	rjmp	.+4      	; 0x190 <DIO_TogglePin+0x38>
 18c:	88 0f       	add	r24, r24
 18e:	99 1f       	adc	r25, r25
 190:	6a 95       	dec	r22
 192:	e2 f7       	brpl	.-8      	; 0x18c <DIO_TogglePin+0x34>
 194:	82 27       	eor	r24, r18
 196:	88 bb       	out	0x18, r24	; 24
		break;
 198:	08 95       	ret
		
		case DIO_PORTC:
		ToggleBit(PORTC , Pin);
 19a:	25 b3       	in	r18, 0x15	; 21
 19c:	81 e0       	ldi	r24, 0x01	; 1
 19e:	90 e0       	ldi	r25, 0x00	; 0
 1a0:	02 c0       	rjmp	.+4      	; 0x1a6 <DIO_TogglePin+0x4e>
 1a2:	88 0f       	add	r24, r24
 1a4:	99 1f       	adc	r25, r25
 1a6:	6a 95       	dec	r22
 1a8:	e2 f7       	brpl	.-8      	; 0x1a2 <DIO_TogglePin+0x4a>
 1aa:	82 27       	eor	r24, r18
 1ac:	85 bb       	out	0x15, r24	; 21
		break;
 1ae:	08 95       	ret
		
		case DIO_PORTD:
		ToggleBit(PORTD , Pin);
 1b0:	22 b3       	in	r18, 0x12	; 18
 1b2:	81 e0       	ldi	r24, 0x01	; 1
 1b4:	90 e0       	ldi	r25, 0x00	; 0
 1b6:	02 c0       	rjmp	.+4      	; 0x1bc <DIO_TogglePin+0x64>
 1b8:	88 0f       	add	r24, r24
 1ba:	99 1f       	adc	r25, r25
 1bc:	6a 95       	dec	r22
 1be:	e2 f7       	brpl	.-8      	; 0x1b8 <DIO_TogglePin+0x60>
 1c0:	82 27       	eor	r24, r18
 1c2:	82 bb       	out	0x12, r24	; 18
 1c4:	08 95       	ret

000001c6 <SET_GlobalInterrupt>:

void SET_GlobalInterrupt(void)
{
	#if GLOBAL_INTERRUPT == GLOBAL_INTERRUPT_ENABLE
	
	SetBit(SREG,7);
 1c6:	8f b7       	in	r24, 0x3f	; 63
 1c8:	80 68       	ori	r24, 0x80	; 128
 1ca:	8f bf       	out	0x3f, r24	; 63
 1cc:	08 95       	ret

000001ce <ExternalINT0_Init>:
}

void ExternalINT0_Init(void)
{
	// Enable Global Interrupt //
	SET_GlobalInterrupt();
 1ce:	0e 94 e3 00 	call	0x1c6	; 0x1c6 <SET_GlobalInterrupt>
	
	// Enable External INT0 //
	SetBit(GICR,6); 
 1d2:	8b b7       	in	r24, 0x3b	; 59
 1d4:	80 64       	ori	r24, 0x40	; 64
 1d6:	8b bf       	out	0x3b, r24	; 59
	
	// Select External INT0 Trigger //
	#if EXTERNAL_INT0_TRIGGER == TRIGGER_RISSING
		MCUCR |= TRIGGER_RISSING;
 1d8:	85 b7       	in	r24, 0x35	; 53
 1da:	83 60       	ori	r24, 0x03	; 3
 1dc:	85 bf       	out	0x35, r24	; 53
 1de:	08 95       	ret

000001e0 <LED_Init>:
		case LED1:
		DIO_SetPinValue(LED1_PORT, LED1_PIN, DIO_PIN_LOW);
		break;
		
		case LED2:
		DIO_SetPinValue(LED2_PORT, LED2_PIN, DIO_PIN_LOW);
 1e0:	81 30       	cpi	r24, 0x01	; 1
 1e2:	51 f0       	breq	.+20     	; 0x1f8 <LED_Init+0x18>
 1e4:	18 f0       	brcs	.+6      	; 0x1ec <LED_Init+0xc>
 1e6:	82 30       	cpi	r24, 0x02	; 2
 1e8:	69 f0       	breq	.+26     	; 0x204 <LED_Init+0x24>
 1ea:	08 95       	ret
 1ec:	40 e0       	ldi	r20, 0x00	; 0
 1ee:	62 e0       	ldi	r22, 0x02	; 2
 1f0:	8e e1       	ldi	r24, 0x1E	; 30
 1f2:	0e 94 36 00 	call	0x6c	; 0x6c <DIO_SetPinDir>
 1f6:	08 95       	ret
 1f8:	40 e0       	ldi	r20, 0x00	; 0
 1fa:	67 e0       	ldi	r22, 0x07	; 7
 1fc:	8e e1       	ldi	r24, 0x1E	; 30
 1fe:	0e 94 36 00 	call	0x6c	; 0x6c <DIO_SetPinDir>
 202:	08 95       	ret
 204:	40 e0       	ldi	r20, 0x00	; 0
 206:	63 e0       	ldi	r22, 0x03	; 3
 208:	88 e2       	ldi	r24, 0x28	; 40
 20a:	0e 94 36 00 	call	0x6c	; 0x6c <DIO_SetPinDir>
 20e:	08 95       	ret

00000210 <LED_Toggle>:
		break;
	}
}
void LED_Toggle(uint8 LED)
{
	switch(LED)
 210:	81 30       	cpi	r24, 0x01	; 1
 212:	49 f0       	breq	.+18     	; 0x226 <LED_Toggle+0x16>
 214:	18 f0       	brcs	.+6      	; 0x21c <LED_Toggle+0xc>
 216:	82 30       	cpi	r24, 0x02	; 2
 218:	59 f0       	breq	.+22     	; 0x230 <LED_Toggle+0x20>
 21a:	08 95       	ret
	{
		case LED0:
		DIO_TogglePin(LED0_PORT, LED0_PIN);
 21c:	62 e0       	ldi	r22, 0x02	; 2
 21e:	8e e1       	ldi	r24, 0x1E	; 30
 220:	0e 94 ac 00 	call	0x158	; 0x158 <DIO_TogglePin>
		break;
 224:	08 95       	ret
		
		case LED1:
		DIO_TogglePin(LED1_PORT, LED1_PIN);
 226:	67 e0       	ldi	r22, 0x07	; 7
 228:	8e e1       	ldi	r24, 0x1E	; 30
 22a:	0e 94 ac 00 	call	0x158	; 0x158 <DIO_TogglePin>
		break;
 22e:	08 95       	ret
		
		case LED2:
		DIO_TogglePin(LED2_PORT, LED2_PIN);
 230:	63 e0       	ldi	r22, 0x03	; 3
 232:	88 e2       	ldi	r24, 0x28	; 40
 234:	0e 94 ac 00 	call	0x158	; 0x158 <DIO_TogglePin>
 238:	08 95       	ret

0000023a <main>:
#include "EXT_INT.h"
#include <avr/interrupt.h>

int main(void)
{
	LED_Init(LED0);
 23a:	80 e0       	ldi	r24, 0x00	; 0
 23c:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <LED_Init>
	ExternalINT0_Init();
 240:	0e 94 e7 00 	call	0x1ce	; 0x1ce <ExternalINT0_Init>
 244:	ff cf       	rjmp	.-2      	; 0x244 <main+0xa>

00000246 <__vector_1>:
		
    }
}

ISR(INT0_vect)
{
 246:	1f 92       	push	r1
 248:	0f 92       	push	r0
 24a:	0f b6       	in	r0, 0x3f	; 63
 24c:	0f 92       	push	r0
 24e:	11 24       	eor	r1, r1
 250:	2f 93       	push	r18
 252:	3f 93       	push	r19
 254:	4f 93       	push	r20
 256:	5f 93       	push	r21
 258:	6f 93       	push	r22
 25a:	7f 93       	push	r23
 25c:	8f 93       	push	r24
 25e:	9f 93       	push	r25
 260:	af 93       	push	r26
 262:	bf 93       	push	r27
 264:	ef 93       	push	r30
 266:	ff 93       	push	r31
	LED_Toggle(LED0);
 268:	80 e0       	ldi	r24, 0x00	; 0
 26a:	0e 94 08 01 	call	0x210	; 0x210 <LED_Toggle>
 26e:	ff 91       	pop	r31
 270:	ef 91       	pop	r30
 272:	bf 91       	pop	r27
 274:	af 91       	pop	r26
 276:	9f 91       	pop	r25
 278:	8f 91       	pop	r24
 27a:	7f 91       	pop	r23
 27c:	6f 91       	pop	r22
 27e:	5f 91       	pop	r21
 280:	4f 91       	pop	r20
 282:	3f 91       	pop	r19
 284:	2f 91       	pop	r18
 286:	0f 90       	pop	r0
 288:	0f be       	out	0x3f, r0	; 63
 28a:	0f 90       	pop	r0
 28c:	1f 90       	pop	r1
 28e:	18 95       	reti

00000290 <_exit>:
 290:	f8 94       	cli

00000292 <__stop_program>:
 292:	ff cf       	rjmp	.-2      	; 0x292 <__stop_program>
